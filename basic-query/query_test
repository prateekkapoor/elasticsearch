# -------Products query------------------------


GET /products/_search

GET /products/_search
{
  "query": {
    "term": {
      "is_active": {
      "value": true
    }
  }}
}

GET /products/_search
{
  "query": {
    "terms": {
      "tags.keyword": [
        "Soup",
        "Meat"
      ]
    }
  }
}

GET /products/_search
{
  "query": {
    "ids": {
      "values": [1,2,3]
    }
  }
}


GET /products/_search
{
  "query": {
    "range": {
      "in_stock": {
        "gte": 1,
        "lte": 5
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "in_stock": {
        "gte": 5
        }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "2010/01/01",
        "lte": "2010/12/31"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "01-01-2010",
        "lte": "31-12-2010",
        "format": "dd-MM-yyyy"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "2010/01/01||-1y"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "2010/01/01||/M-1y"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "now-1y"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "range": {
      "created": {
        "gte": "now"
      }
    }
  }
}

#returns not null, empty string null, array which does
# not have any elements is null

GET /products/_search
{
  "query": {
    "exists": {
      "field": "tags"
    }
  }
}

GET /products/_search
{
  "query": {
    "prefix": {
      "tags.keyword": {
        "value": "Vege"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "wildcard": {
      "tags.keyword": {
        "value": "Vege*le"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "wildcard": {
      "tags.keyword": {
        "value": "Vegetabl?"
      }
    }
  }
}

GET /products/_search
{
  "query": {
    "regexp": {
      "tags.keyword": "Veget[a-zA-Z]+ble"
    }
    
  }
}

#full text search queries

GET /recipe/_mapping
GET /recipe/_search

GET /recipe/_search
{
  "query": {
    "match": {
      "title": "Recipes with pasta or spaghetti"
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match": {
      "title":{
        "operator": "and", 
        "query": "Recipes with pasta or spaghetti"
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match": {
      "title":{
        "operator": "and", 
        "query": "pasta or spaghetti"
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match": {
      "title":{
        "operator": "and", 
        "query": "pasta spaghetti"
      }
    }
  }
}


GET /recipe/_search
{
  "query": {
    "match": {
      "title":{
        "operator": "and", 
        "query": "spaghetti pasta"
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match_phrase": {
      "title": "spaghetti puttanesca"
    }
  }
}

GET /recipe/_search
{
  "query": {
    "multi_match": {
      "query": "pasta",
      "fields": ["title","description"]
    }
  }
}

#compund query

GET /recipe/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ingredients.name": "parmesan"
          }
        }
      ],
      "must_not": [
        {
          "match": {
            "ingredients.name": "tuna"
          }
        }
      ], 
      "should": [
        {
          "match": {
            "ingredients.name": "pasta"
          }
        }
      ], 
      "filter": {
          "range": {
            "preparation_time_minutes": {
              "gte": 1,
              "lte": 15
          }
        }
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ingredients.name": {
              "query": "parmesan",
              "_name": "parmesan_must"
            }
          }
        }
      ],
      "must_not": [
        {
          "match": {
            "ingredients.name": {
              "query": "tuna",
               "_name": "tuna_must_not"
            }
          }
        }
      ], 
      "should": [
        {
          "match": {
            "ingredients.name": {
              "query": "pasta",
              "_name": "pasta_should"
            }
          }
        }
      ], 
      "filter": {
          "range": {
            "preparation_time_minutes": {
              "gte": 1,
              "lte": 15,
              "_name": "filter"
          }
        }
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match": {
      "title": "pasta Carbonara"
    }
  }
}

GET /recipe/_search
{
  "query": {
    "match": {
      "title": {
        "query": "pasta Carbonara",
        "operator": "and"
      }
    }
  }
}

GET /recipe/_search
{
  "query": {
    "bool": {
      "should": [
        {
          "term": {
            "title": {
              "value": "pasta"
            }
          }
        },{
           "term": {
            "title": {
              "value": "carbonara"
            }
          }
        }
      ]
    }
  }
}

GET /recipe/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "term": {
            "title": {
              "value": "pasta"
            }
          }
        },{
           "term": {
            "title": {
              "value": "carbonara"
            }
          }
        }
      ]
    }
  }
}


#Joining Query
#Joins are expensive in elastic serach

#Adding data

PUT /department
{
  "mappings": {
    "_doc": {
      "properties": {
        "name": {
          "type": "text"
        },
        "employees": {
          "type": "nested"
        }
      }
    }
  }
}



POST /department/_doc/1
{
  "name": "Development",
  "employees": [
    {
      "name": "Eric Green",
      "age": 39,
      "gender": "M",
      "position": "Big Data Specialist"
    },
    {
      "name": "James Taylor",
      "age": 27,
      "gender": "M",
      "position": "Software Developer"
    },
    {
      "name": "Gary Jenkins",
      "age": 21,
      "gender": "M",
      "position": "Intern"
    },
    {
      "name": "Julie Powell",
      "age": 26,
      "gender": "F",
      "position": "Intern"
    },
    {
      "name": "Benjamin Smith",
      "age": 46,
      "gender": "M",
      "position": "Senior Software Engineer"
    }
  ]
}
POST /department/_doc/2
{
  "name": "HR & Marketing",
  "employees": [
    {
      "name": "Patricia Lewis",
      "age": 42,
      "gender": "F",
      "position": "Senior Marketing Manager"
    },
    {
      "name": "Maria Anderson",
      "age": 56,
      "gender": "F",
      "position": "Head of HR"
    },
    {
      "name": "Margaret Harris",
      "age": 19,
      "gender": "F",
      "position": "Intern"
    },
    {
      "name": "Ryan Nelson",
      "age": 31,
      "gender": "M",
      "position": "Marketing Manager"
    },
    {
      "name": "Kathy Williams",
      "age": 49,
      "gender": "F",
      "position": "Senior Marketing Manager"
    },
    {
      "name": "Jacqueline Hill",
      "age": 28,
      "gender": "F",
      "position": "Junior Marketing Manager"
    },
    {
      "name": "Donald Morris",
      "age": 39,
      "gender": "M",
      "position": "SEO Specialist"
    },
    {
      "name": "Evelyn Henderson",
      "age": 24,
      "gender": "F",
      "position": "Intern"
    },
    {
      "name": "Earl Moore",
      "age": 21,
      "gender": "M",
      "position": "Junior SEO Specialist"
    },
    {
      "name": "Phillip Sanchez",
      "age": 35,
      "gender": "M",
      "position": "SEM Specialist"
    }
  ]
}


#female intern

GET /department/_search
{
   "query": {
         "bool": {
          "must": [
            {
              "match": {
                "employees.position": "intern"
              }
            },
            {
              "term": {
                "employees.gender.keyword": {
                  "value": "F"
                }
              }
            }
          ]
      }
     }
}


GET /department/_search
{
 "query": {
   "nested": {
     "path": "employees",
      "query": {
         "bool": {
          "must": [
            {
              "match": {
                "employees.position": "intern"
              }
            },
            {
              "term": {
                "employees.gender.keyword": {
                  "value": "F"
                }
              }
            }
          ]
      }
     }
   }
 } 
}

GET /department/_search
{
 "_source": "false",   
 "query": {
   "nested": {
     "path": "employees",
     "inner_hits": {}, 
      "query": {
         "bool": {
          "must": [
            {
              "match": {
                "employees.position": "intern"
              }
            },
            {
              "term": {
                "employees.gender.keyword": {
                  "value": "F"
                }
              }
            }
          ]
      }
     }
   }
 } 
}

#maintaining relationships

DELETE /department

PUT /department
{
  "mappings": {
    "_doc":{
      "properties":{
        "join_field":{
          "type":"join",
          "relations":{
            "department":"employee"
          }
        }
      }
    }
  }
}

PUT /department/_doc/1
{
  "name": "Development",
  "join_field":{
  "name": "department"
  }
}

PUT /department/_doc/2
{
  "name": "Marketing",
  "join_field":{
  "name": "department"
  }
}
PUT /department/_doc/3?routing=1
{
  "name": "Bo Anderson",
  "age": 28,
  "gender": "M",
  "join_field":{
  "name": "employee",
  "parent": "1"
  }
}

PUT /department/_doc/4?routing=2
{
  "name": "John Doe",
  "age":  "44",
  "gender": "M",
  "join_field":{
  "name": "employee",
  "parent": "2"
  }
}

PUT /department/_doc/5?routing=1
{
  "name": "James Evans",
  "age": 32,
  "gender": "M",
  "join_field": {
    "name": "employee",
    "parent": 1
  }
}
PUT /department/_doc/6?routing=1
{
  "name": "Daniel Harris",
  "age": 52,
  "gender": "M",
  "join_field": {
    "name": "employee",
    "parent": 1
  }
}
PUT /department/_doc/7?routing=2
{
  "name": "Jane Park",
  "age": 23,
  "gender": "F",
  "join_field": {
    "name": "employee",
    "parent": 2
  }
}
PUT /department/_doc/8?routing=1
{
  "name": "Christina Parker",
  "age": 29,
  "gender": "F",
  "join_field": {
    "name": "employee",
    "parent": 1
  }
}
# get parent by id

GET /department/_search
{
  "query": {
    "parent_id": {
      "type": "employee",
      "id": 1
    }
  }
}

GET /department/_search
{
  "query": {
    "parent_id": {
      "type": "employee",
      "id": 2
    }
  }
}

GET /department/_search
{
  "query": {
    "has_parent": {
      "parent_type": "department",
      "query": {
        "term": {
          "name.keyword": {
            "value": "Development"
          }
        }
      }
    }
  }
}

GET /department/_search
{
  "query": {
    "has_parent": {
      "parent_type": "department",
      "score": true, 
      "query": {
        "term": {
          "name.keyword": {
            "value": "Development"
          }
        }
      }
    }
  }
}


GET /department/_search
{
  "query": {
    "has_child": {
      "type": "employee",
      "query": {
        "bool": {
          "must": [
            {
              "range": {
                "age": {
                  "gte": 50
                }
              }
            },
            {
              "term": {
                "gender.keyword": {
                  "value": "M"
                }
              }
            }
          ]
        }
      }
    }
  }
}

GET /department/_search
{
  "query": {
    "has_child": {
      "type": "employee",
      "score_mode": "sum", 
      "query": {
        "bool": {
          "must": [
            {
              "range": {
                "age": {
                  "gte": 50
                }
              }
            },
            {
              "term": {
                "gender.keyword": {
                  "value": "M"
                }
              }
            }
          ]
        }
      }
    }
  }
}


GET /department/_search
{
  "query": {
    "has_child": {
      "type": "employee",
      "score_mode": "sum",
      "max_children": 5,
      "min_children": 1, 
      "query": {
        "bool": {
          "must": [
            {
              "range": {
                "age": {
                  "gte": 50
                }
              }
            },
            {
              "term": {
                "gender.keyword": {
                  "value": "M"
                }
              }
            }
          ]
        }
      }
    }
  }
}

#Multi relationships

PUT /company
{
  "mappings": {
    "_doc": {
      "properties": {
          "join_field": {
          "type": "join",
          "relations": {
           "company": [ "department", "supplier" ],
            "department": "employee"
          }
        }
      }
    }
  }
}

PUT /company/_doc/1
{
  "name": "My Company inc.",
  "join_field": "company"
}

PUT /company/_doc/2?routing=1
{
  "name": "Marketing",
  "join_field": {
    "name": "department",
    "parent": 1
  }
}   


PUT /company/_doc/3?routing=1
{
  "name": "John Doe",
  "join_field": {
    "name": "employee",
    "parent": "2"
  }
}

PUT /company/_doc/4
{
  "name": "Another Company, Inc.",
  "join_field": "company"
}
PUT /company/_doc/5?routing=4
{
  "name": "Development",
  "join_field": {
    "name": "department",
    "parent": 4
  }
}
PUT /company/_doc/6?routing=4
{
  "name": "Bo Andersan",
  "join_field": {
    "name": "employee",
    "parent": 5
  }
}

GET /company/_search
{
  "query": {
    "has_child": {
      "type": "department",
      "query": {
        "has_child": {
          "type": "employee",
          "query": {
            "term": {
              "name.keyword": {
                "value": "John Doe"
              }
            }
          }
        }
      }
    }
  }
}

GET /company/_search
{
  "query": {
    "has_child": {
      "type": "department",
      "inner_hits": {}, 
      "query": {
        "has_child": {
          "type": "employee",
          "query": {
            "term": {
              "name.keyword": {
                "value": "John Doe"
              }
            }
          }
        }
      }
    }
  }
}

#term lookup
PUT /users/_doc/1
{
  "name": "John Roberts",
  "following" : [2, 3]
}
PUT /users/_doc/2
{
  "name": "Elizabeth Ross",
  "following" : []
}
PUT /users/_doc/3
{
  "name": "Jeremy Brooks",
  "following" : [1, 2]
}
PUT /users/_doc/4
{
  "name": "Diana Moore",
  "following" : [3, 1]
}
PUT /stories/_doc/1
{
  "user": 3,
  "content": "Wow look, a penguin!"
}
PUT /stories/_doc/2
{
  "user": 1,
  "content": "Just another day at the office... #coffee"
}
PUT /stories/_doc/3
{
  "user": 1,
  "content": "Making search great again! #elasticsearch #elk"
}
PUT /stories/_doc/4
{
  "user": 4,
  "content": "Had a blast today! #rollercoaster #amusementpark"
}
PUT /stories/_doc/5
{
  "user": 4,
  "content": "Yay, I just got hired as an Elasticsearch consultant - so excited!"
}
PUT /stories/_doc/6
{
  "user": 2,
  "content": "Chilling at the beach @ Greece #vacation #goodtimes"
}




GET /stories/_search
{
  "query": {
    "terms": {
      "user": {
        "index": "users",
        "type": "_doc",
        "path": "following",
        "id": 1
      }
    }
  }
}

GET /users/_doc/1

GET /stories/_search
{
  "query": {
    "terms": {
      "user": [
        2,
        3
      ]
    }
  }
}

GET /_cat/indices

GET /bank/_doc/_mapping

PUT /first

PUT /first/one

GET /first/_search
{
  "query": {"match_all": {}}
}


PUT /second/two

GET /session-cvus/_search
{
  "query": {"match_all": {}}
}


PUT /session-cvus

GET /products/default/_search
{
  "query": {
    "term": {
      "is_active": true
      
    }
  }
}


GET  /recipe/_search?format=yaml
{
  "query": {
    "match_all": {}
  }
}

GET  /recipe/_search?pretty
{
  "query": {
    "match_all": {}
  }
}


GET /recipe/_search
{
  "_source": false, 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}

GET /recipe/_search
{
  "_source": "title", 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}


GET /recipe/_search
{
  "_source": ["title", "servings.max", "ingredients.name"], 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}


GET /recipe/_search
{
  "_source": ["title", "servings.max", "ingredients.*"], 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}


GET /recipe/_search
{
  "_source": {
    "includes": "ingredients.*",
    "excludes": "ingredients.quantity"
  },
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}


GET /recipe/_search?size=2
{
  "_source": false, 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}


GET /recipe/_search
{
  "_source": false, 
  "size": 2, 
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}

GET /recipe/_search
{
  "_source": false, 
  "size": 2, 
  "from":0,
  "query": {
    "match": {
      "title": "pasta"
    }
  }
} 

  GET /recipe/_search
{
  "_source": false, 
  "size": 2, 
  "from":2,
  "query": {
    "match": {
      "title": "pasta"
    }
  }
}

GET /recipe/_search
{
  "_source": false,
  "query": {
    "match_all": {}
  },
  "sort": [
    {
      "preparation_time_minutes": {
        "order": "asc"
      }
    }
  ]
}

GET /recipe/_search
{
  "_source": "created",
  "query": {
    "match_all": {}
  },
  "sort": [
    {
      "created": {
        "order": "desc"
      }
    }
  ]
}

GET /recipe/_search
{
  "_source": ["preparation_time_minutes","created"],
  "query": {
    "match_all": {}
  },
  "sort": [
    {
      "preparation_time_minutes":{
        "order": "asc"
      }
    },
    {
      "created": {
        "order": "desc"
      }
    }
  ]
}


GET /recipe/_search
{
  "query": {
    "match_all": {}
  }
}


GET /recipe/_search
{
  "_source": "ratings", 
  "query": {
    "match_all": {}
  },
  "sort": [
    {
      "ratings": {
        "order": "desc",
        "mode": "avg"
      }
    }
  ]
}

#order for aggrgation

PUT /order
{
  "mappings": {
    "default": {
      "properties": {
        "purchased_at": {
          "type": "date"
        },
        "lines": {
          "type": "nested",
          "properties": {
            "product_id": {
              "type": "integer"
            },
            "amount": {
              "type": "double"
            },
            "quantity": {
              "type": "short"
            }
          }
        },
        "total_amount": {
          "type": "double"
        },
        "status": {
          "type": "keyword"
        },
        "sales_channel": {
          "type": "keyword"
        },
        "salesman": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "text"
            }
          }
        }
      }
    }
  }
}

GET /order/_search




#Aggregations


GET /order/_search
{
"size": 0,
"aggs": {
  "total_sales": {
    "sum": {
      "field": "total_amount"
    }
   }
  }
}

GET /order/_search
{
  "size": 0, 
  "aggs": {
    "total_sales": {
      "sum": {
        "field": "total_amount"
      }
    },
    "avg_sales":{
      "avg": {
        "field": "total_amount"
      }
    },
    "cardinality":{
      "cardinality": {
        "field": "salesman.id"
      }
    },
    "values_count":{
      "value_count": {
        "field": "total_amount"
      }
    }
  }
}

GET /order/_search
{
  "size": 0,
  "aggs": {
    "stats_aggs": {
      "stats": {
        "field": "total_amount"
      }
    }
  }
}
GET /order/_search
{
  "size": 0,
  "aggs": {
    "bucket_aggregation": {
      "terms": {
        "field": "status"
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "bucket_aggregation": {
      "terms": {
        "field": "status",
        "missing": "N/A"
      }
    }
  }
}

GET /order/_search
{
  "size": 0,
  "aggs": {
    "bucket_aggregation": {
      "terms": {
        "field": "status",
        "missing": "N/A",
        "min_doc_count": 0
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "bucket_aggregation": {
      "terms": {
        "field": "status",
        "missing": "N/A",
        "min_doc_count": 0,
        "order": {
          "_term": "asc"
        }
      }
    }
  }
}

GET /order/_search
{
  "size": 0,
  "aggs": {
    "nested_aggs": {
      "terms": {
        "field": "status"
      },
      "aggs": {
        "stats_agg": {
          "stats": {
            "field": "total_amount"
          }
        }
      }
    }
  }
  
}

GET /order/_search
{
  "size": 0,
  "query": {
    "range": {
      "total_amount": {
        "gte": 100
        
      }
    }
  }, 
  "aggs": {
    "nested_aggs": {
      "terms": {
        "field": "status"
      },
      "aggs": {
        "stats_agg": {
          "stats": {
            "field": "total_amount"
          }
        }
      }
    }
  }
  
}

GET /order/_search
{
  "size": 0,
  "aggs": {
    "low_value": {
      "filter": {
        "range": {
          "total_amount": {
            "lte": 50
          }
        }
      }
    }
  }
}

GET /order/_search
{
  "size": 0,
  "aggs": {
    "low_value": {
      "filter": {
        "range": {
          "total_amount": {
            "lte": 50
          }
        }
      },
      "aggs": {
        "avg_total_amt": {
          "avg": {
            "field": "total_amount"
          }
        }
      }
    }
  }
}


GET /recipe/_search
{
  "size": 0,
  "aggs": {
    "filter_agg": {
      "filters": {
        "filters": {
          "pasta": {
            "match": {
              "title": "pasta"
            }
          },
          "spaghetti":{
            "match": {
                "title": "spaghetti"
              }
            }
          }
        }
      }
    }
  }


GET /recipe/_search
{
  "size": 0,
  "aggs": {
    "filter_agg": {
      "filters": {
        "filters": {
          "pasta": {
            "match": {
              "title": "pasta"
            }
          },
          "spaghetti":{
            "match": {
                "title": "spaghetti"
              }
            }
          }
        },
        "aggs": {
          "avg_agg": {
            "avg": {
              "field": "ratings"
            }
          }
        }
      }
    }
  }




GET /order/_search
{
  "size": 0,
  "aggs": {
    "amount_distribution": {
      "range": {
        "field": "total_amount",
        "ranges": [
          {
            "from": 0,
            "to": 50
          },
          {
            "from": 50,
            "to": 100
          },
          {
            "from": 100,
            "to": 150
          }
        ]
      }
    }
  }
}



GET /order/_search
{
  "size": 0,
  "aggs": {
    "placed_agg": {
      "date_range": {
        "field": "purchased_at",
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y"
          }
        ]
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "placed_agg": {
      "date_range": {
        "format": "yyyy-MM-dd", 
        "field": "purchased_at",
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y"
          }
        ]
      }
    }
  }
}





GET /order/_search
{
  "size": 0,
  "aggs": {
    "placed_agg": {
      "date_range": {
        "format": "yyyy-MM-dd", 
        "keyed": true, 
        "field": "purchased_at",
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y"
          }
        ]
      }
    }
  }
}




GET /order/_search
{
  "size": 0,
  "aggs": {
    "placed_agg": {
      "date_range": {
        "format": "yyyy-MM-dd", 
        "keyed": true, 
        "field": "purchased_at",
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M",
            "key": "first_half"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y",
            "key": "second_half"
          }
        ]
      }
    }
  }
}





GET /order/_search
{
  "size": 0,
  "aggs": {
    "placed_agg": {
      "date_range": {
        "format": "yyyy-MM-dd", 
        "keyed": true, 
        "field": "purchased_at",
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M",
            "key": "first_half"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y",
            "key": "second_half"
          }
        ]
      },
      "aggs": {
        "purchases_stats": {
          "stats": {
            "field": "total_amount"
          }
        }
      }
    }
  }
}



GET /order/_search
{
  "size": 0,
  "aggs": {
    "amount_dis": {
      "histogram": {
        "field": "total_amount",
        "interval": 25
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "amount_dis": {
      "histogram": {
        "field": "total_amount",
        "interval": 25,
        "min_doc_count": 1
      }
    }
  }
}

GET /order/_search
{
  "size": 0,
  "query": {
    "range": {
      "total_amount": {
        "gte": 100
        }
    }
  }, 
  "aggs": {
    "amount_dis": {
      "histogram": {
        "field": "total_amount",
        "interval": 25,
        "min_doc_count": 1
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "query": {
    "range": {
      "total_amount": {
        "gte": 100
        }
    }
  }, 
  "aggs": {
    "amount_dis": {
      "histogram": {
        "field": "total_amount",
        "interval": 25,
        "min_doc_count": 0,
        "extended_bounds": {
          "min": 0,
          "max": 500
        }
      }
    }
  }
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "purchased_at_dis": {
      "date_histogram": {
        "format": "dd-MM-yyyy",
        "keyed": true, 
        "field": "purchased_at",
        "interval": "month"
      }
    }
  }
}



GET /order/_search
{
  "size": 0, 
  "query": {
    "range": {
      "total_amount": {
        "gte": 10
        }
    }
  },
  "aggs": {
    "global_agg": {
      "global": {},
       "aggs": {
            "stat_agg": {
              "stats": {
                "field": "total_amount"
              }
             }
            }
        }
      }
    }
    
GET /order/_search
{
  "size": 0, 
  "query": {
    "range": {
      "total_amount": {
        "gte": 100
        }
    }
  },
  "aggs": {
    "global_agg": {
      "global": {},
       "aggs": {
            "stat_agg": {
              "stats": {
                "field": "total_amount"
              }
             }
            }
        },
        "expensive":{
          "stats": {
            "field": "total_amount"
          }
        }
      }
    }    
  

POST order/default/1001
{
  "total_amount": 100
}

POST order/default/1001
{
  "total_amount": 200,
  "status": null
}


GET /order/_search
{
  "size": 0,
  "aggs": {
    "missing_agg": {
      "missing": {
        "field": "status"
      }
      , "aggs": {
        "missing_sum": {
          "sum": {
            "field": "total_amount"
          }
        }
      }
    }
    
  }
}



GET /department/_search
{
  "size": 0,
  "aggs": {
    "nested_agg": {
      "nested": {
        "path": "employyes"
      }
    },
    "min_agg": {
      "min": {
        "field": "age"
      }
    }
  }
}





PUT /proximity/default/1
{
  "title": "Spicy Sauce"
}
PUT /proximity/default/2
{
  "title": "Spicy Tomato Sauce"
}
PUT /proximity/default/3
{
  "title": "Spicy Tomato and Garlic Sauce"
}
PUT /proximity/default/4
{
  "title": "Tomato Sauce (spicy)"
}
PUT /proximity/default/5
{
  "title": "Spicy and very delicious Tomato Sauce"
}





GET /proximity/_search
{
  "query": {
    "match_phrase": {
      "title": "spicy sauce"
    }
  }
}

GET /proximity/_search
{
  "query": {
    "match_phrase": {
      "title": {
      "query":    "spicy sauce",
      "slop": 2
    }
  }
}
}


GET /proximity/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "title": "spicy sauce"
          }
        }
      ],
      "should": [
        {
          "match_phrase": {
            "title": {
              "query": "spicy sauce",
              "slop": 5
            }
          }
        }
      ]
    }
  }
}




GET /products/_search
{
  "query": {
    "match": {
      "name": "lobster"
    }
  }
}

GET /products/_search
{
  "query": {
    "match": {
      "name": {
        "query": "lobster",
        "fuzziness": "auto"
      }
      
    }
  }
}


GET /products/_search
{
  "query": {
    "match": {
      "name": {
        "query": "l0bster",
        "fuzziness": "auto"
      }
      
    }
  }
}


GET /products/_search
{
  "query": {
    "match": {
      "name": {
        "query": "lobster love",
        "operator": "and", 
        "fuzziness": "auto"
      }
      
    }
  }
}  
  
  
GET /products/_search
{
  "query": {
    "match": {
      "name": {
        "query": "lvie",
        "fuzziness": "auto"
      }
      
    }
  
}
}




GET /products/_search
{
  "query": {
    "fuzzy": {
      "name": {
        "value": "LOBSTER", 
        "fuzziness": "auto"
      }
    }
  }
}



GET /products/_search
{
  "query": {
    "fuzzy": {
      "name": {
        "value": "lobster", 
        "fuzziness": "auto"
      }
    }
  }
}
